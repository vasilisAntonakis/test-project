@model WebAPI.Model.Gender

@{
    ViewBag.Title = "Add Gender";
    ViewBag.dateFormat = "dd-MMM-yyyy";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Gender</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptionM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRecStarted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateRecStarted, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.DateRecStarted.ToString(ViewBag.dateFormat) } })
                @Html.ValidationMessageFor(model => model.DateRecStarted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoginRecStarted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginRecStarted, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.LoginRecStarted.ToString(ViewBag.dateFormat) } })
                @Html.ValidationMessageFor(model => model.LoginRecStarted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRecEnded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateRecEnded, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.DateRecEnded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoginRecEnded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoginRecEnded, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.LoginRecEnded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")
    <script>
        $("form").on('submit', function (e) {
            console.log(e);
        })
        datePickerInit('@ViewBag.dateFormat')
        linkDatePickers($('#DateRecStarted'), $('#DateRecEnded'));
        linkDatePickers($('#LoginRecStarted'), $('#LoginRecEnded'));
    </script>
}
